#!/bin/bash

# Google Cloud Run ф┐ох╛йщГич╜▓шЕ│цЬм
# чФицЦ╝шзгц▒║цМБч║МцАзцзЛх╗║хд▒цХЧхХПщбМ

set -e

# щбПшЙ▓хоЪч╛й
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# щЕНч╜охПГцХ╕
PROJECT_ID="adept-arbor-467807-t9"
SERVICE_NAME="employee-management-system"
REGION="europe-west1"
IMAGE_NAME="gcr.io/${PROJECT_ID}/${SERVICE_NAME}:latest"

echo -e "${BLUE}ЁЯЪА щЦЛхзЛ Google Cloud Run ф┐ох╛йщГич╜▓...${NC}"

# цнещйЯ 1: щйЧшнЙчХ╢хЙНщЕНч╜о
echo -e "${YELLOW}ЁЯУЛ цнещйЯ 1: щйЧшнЙх░ИцбИщЕНч╜о...${NC}"
echo "х░ИцбИID: ${PROJECT_ID}"
echo "цЬНхЛЩхРНчи▒: ${SERVICE_NAME}"
echo "щГич╜▓хНАхЯЯ: ${REGION}"
echo "цШахГПхРНчи▒: ${IMAGE_NAME}"

# цнещйЯ 2: цквцЯе gcloud шкНшнЙ
echo -e "${YELLOW}ЁЯФР цнещйЯ 2: цквцЯе Google Cloud шкНшнЙ...${NC}"
if ! gcloud auth list --filter=status:ACTIVE --format="value(account)" | grep -q "."; then
    echo -e "${RED}тЭМ цЬкцЙ╛хИ░ц┤╗хЛХчЪД Google Cloud шкНшнЙ${NC}"
    echo -e "${BLUE}шлЛщБЛшбМф╗еф╕ЛхС╜ф╗дщА▓шбМшкНшнЙ:${NC}"
    echo "gcloud auth login"
    echo "gcloud auth application-default login"
    exit 1
fi

# цнещйЯ 3: шинхоЪцнгчв║чЪДх░ИцбИ
echo -e "${YELLOW}тЪЩя╕П цнещйЯ 3: шинхоЪх░ИцбИщЕНч╜о...${NC}"
gcloud config set project ${PROJECT_ID}
gcloud config set run/region ${REGION}

# цнещйЯ 4: хХЯчФих┐ЕшжБчЪД API
echo -e "${YELLOW}ЁЯФз цнещйЯ 4: хХЯчФих┐ЕшжБчЪД Google Cloud APIs...${NC}"
gcloud services enable cloudbuild.googleapis.com
gcloud services enable run.googleapis.com
gcloud services enable containerregistry.googleapis.com

# цнещйЯ 5: ц╕ЕчРЖшИКчЪДцШахГП
echo -e "${YELLOW}ЁЯз╣ цнещйЯ 5: ц╕ЕчРЖшИКчЪДхо╣хЩицШахГП...${NC}"
gcloud container images delete ${IMAGE_NAME} --quiet --force-delete-tags || true

# цнещйЯ 6: цзЛх╗║цЦ░чЪД Docker цШахГП
echo -e "${YELLOW}ЁЯР│ цнещйЯ 6: цзЛх╗║ Docker цШахГП...${NC}"
docker build --platform linux/amd64 -t ${IMAGE_NAME} .

# цнещйЯ 7: цОищАБцШахГПхИ░ Container Registry
echo -e "${YELLOW}ЁЯУд цнещйЯ 7: цОищАБцШахГПхИ░ Google Container Registry...${NC}"
docker push ${IMAGE_NAME}

# цнещйЯ 8: щГич╜▓хИ░ Cloud Run
echo -e "${YELLOW}ЁЯЪА цнещйЯ 8: щГич╜▓хИ░ Google Cloud Run...${NC}"
gcloud run deploy ${SERVICE_NAME} \
  --image ${IMAGE_NAME} \
  --platform managed \
  --region ${REGION} \
  --allow-unauthenticated \
  --port 8080 \
  --memory 2Gi \
  --cpu 2 \
  --min-instances 0 \
  --max-instances 10 \
  --concurrency 80 \
  --timeout 300 \
  --set-env-vars NODE_ENV=production,PORT=8080

# цнещйЯ 9: чН▓хПЦцЬНхЛЩ URL
echo -e "${YELLOW}ЁЯМР цнещйЯ 9: чН▓хПЦцЬНхЛЩ URL...${NC}"
SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} --region ${REGION} --format="value(status.url)")

# цнещйЯ 10: щйЧшнЙщГич╜▓
echo -e "${YELLOW}тЬЕ цнещйЯ 10: щйЧшнЙщГич╜▓чЛАцЕЛ...${NC}"
echo -e "${GREEN}ЁЯОЙ щГич╜▓хоМцИРя╝Б${NC}"
echo -e "${GREEN}цЬНхЛЩ URL: ${SERVICE_URL}${NC}"
echo -e "${GREEN}хБех║╖цквцЯе: ${SERVICE_URL}/api/health${NC}"

# цнещйЯ 11: ц╕мшйжчлпщ╗Ю
echo -e "${YELLOW}ЁЯзк цнещйЯ 11: ц╕мшйжцЬНхЛЩчлпщ╗Ю...${NC}"
echo "цнгхЬиц╕мшйжхБех║╖цквцЯечлпщ╗Ю..."
if curl -f "${SERVICE_URL}/api/health" > /dev/null 2>&1; then
    echo -e "${GREEN}тЬЕ хБех║╖цквцЯечлпщ╗Юцнгх╕╕${NC}"
else
    echo -e "${RED}тЭМ хБех║╖цквцЯечлпщ╗ЮчХ░х╕╕${NC}"
fi

echo -e "${BLUE}ЁЯОп ф┐ох╛йщГич╜▓хоМцИРя╝Б${NC}"
echo -e "${GREEN}хПпчФичЪДчлпщ╗Ю:${NC}"
echo "  - ф╕╗щаБ: ${SERVICE_URL}"
echo "  - хБех║╖цквцЯе: ${SERVICE_URL}/api/health"
echo "  - чФвхУБчобчРЖ: ${SERVICE_URL}/api/products"
echo "  - х║лхнШчобчРЖ: ${SERVICE_URL}/api/inventory"
echo "  - хУбх╖ечЩ╗хЕе: ${SERVICE_URL}/api/login"